When would you want to use a remote repository rather than keeping all your work
local?

    When I am working together with someone and when I want to keep a remote
    backup of what I am doing, for safekeeping.

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    Same reason as why we want commits to be manual rather than automatic:
    control. If pulls happened automatically, they could interfere with
    whatever it was we were doing locally.

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

    Forks are about copying somebody else's work while a) giving them credit,
    b) not interfering with their work, and c) keeping a link to the original
    repository in case you want to suggest them to take your changes and (I
    think) being able to keep in sync with the changes they do, too.
    Clones are about copying somebody else's job. GitHub sets any
    repository you clone as a remote of your local repository, BUT unless
    the original repository was yours or you have permission, you won't be
    able to upload (sync) your local clone with the original.
    Branches we already saw, and they are meant to try (or fix) something new
    on the side, without breaking the main (master) branch, which is often
    production-quality code.

What is the benefit of having a copy of the last known state of the remote
stored locally?

    Fill in your answer here

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    Fill in your answer here

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    Fill in your answer here
